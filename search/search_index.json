{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Azure Visual Intelligence Description Every architecture starts with a diagram. But then we are quickly submerged by Azure complexity : template language and tool diversity. This project intends to put back diagram as the core representation of everything you will achieve in Azure","title":"Overview"},{"location":"#azure-visual-intelligence","text":"","title":"Azure Visual Intelligence"},{"location":"#description","text":"Every architecture starts with a diagram. But then we are quickly submerged by Azure complexity : template language and tool diversity. This project intends to put back diagram as the core representation of everything you will achieve in Azure","title":"Description"},{"location":"contribution-dev/","text":"Dev environment setup Prerequisites Azure AD admin to create app registrations Visual Studio Code Node.js latest Steps Create an App registration : SPA with Access tokens and ID tokens Redirect URI : http://localhost:3000 Permissions : delegated Azure Service Management / user_impersonation delegated Microsoft Graph / Calendars.Read delegated Microsoft Graph / User.Read delegated Microsoft Graph / openid delegated Microsoft Graph / profile Retrieve the code from https://github.com/Azure/azure-visual-intelligence Open in Visual Studio Code Create /src/common/Config. dev .ts using Config.env.ts as a template Edit /src/common/Config. dev .ts and fill in those 3 placeholders : clientId: \"**_APP_ID_**\", authority: \"https://login.microsoftonline.com/___TENANT_ID___\", redirectUri: \"**_REDIRECT_URI_**\", Open a terminal and run npm install Run npm start Contribute Look at the issues here : https://github.com/Azure/azure-visual-intelligence/issues","title":"Develop"},{"location":"contribution-dev/#dev-environment-setup","text":"","title":"Dev environment setup"},{"location":"contribution-dev/#prerequisites","text":"Azure AD admin to create app registrations Visual Studio Code Node.js latest","title":"Prerequisites"},{"location":"contribution-dev/#steps","text":"Create an App registration : SPA with Access tokens and ID tokens Redirect URI : http://localhost:3000 Permissions : delegated Azure Service Management / user_impersonation delegated Microsoft Graph / Calendars.Read delegated Microsoft Graph / User.Read delegated Microsoft Graph / openid delegated Microsoft Graph / profile Retrieve the code from https://github.com/Azure/azure-visual-intelligence Open in Visual Studio Code Create /src/common/Config. dev .ts using Config.env.ts as a template Edit /src/common/Config. dev .ts and fill in those 3 placeholders : clientId: \"**_APP_ID_**\", authority: \"https://login.microsoftonline.com/___TENANT_ID___\", redirectUri: \"**_REDIRECT_URI_**\", Open a terminal and run npm install Run npm start","title":"Steps"},{"location":"contribution-dev/#contribute","text":"Look at the issues here : https://github.com/Azure/azure-visual-intelligence/issues","title":"Contribute"},{"location":"contribution-doc/","text":"Built on mkdocs on Windows, run python -m mkdocs serve to execute the doc locally to see your changes","title":"Documentation"},{"location":"installation/","text":"Installation Get the last source on https://github.com/Azure/azure-visual-intelligence Create app registration Open Visual studio code, edit src/common/Config.ts open a ternminal and run npm run start","title":"Installation"},{"location":"installation/#installation","text":"Get the last source on https://github.com/Azure/azure-visual-intelligence Create app registration Open Visual studio code, edit src/common/Config.ts open a ternminal and run npm run start","title":"Installation"},{"location":"workflow/","text":"1. Sign in Log in to configured 2. DragnDrop resources UI diagram/Graph.js dispatch DRAGnDROP on DRAGnDROP event -> handleDragnDrop Get : (getDiagramResources) addResourceToDiagram Update payload resources from toolbox to resource of AVIresource type armEngine.GetResourcesAndRelatedResources return [resources, relations] Set : (setDiagramResources setDiagramRelations) on setDiagramRelations event -> handleNewDiagramResources Get : (getDiagramResources getAzureSettings getDiagramRelations) all layout (AddDiagramResourceToDisplay) Set : (all (setDiagramNodes)) UI Graph useEffect graph.current.elements().remove() graph.current.add(diagramDisplay[currentLayout].elements) layout.current = graph.current.makeLayout({configgraph}) layout.current.run() 3. Switching layout","title":"Workflow"},{"location":"workflow/#1-sign-in","text":"Log in to configured","title":"1. Sign in"},{"location":"workflow/#2-dragndrop-resources","text":"UI diagram/Graph.js dispatch DRAGnDROP on DRAGnDROP event -> handleDragnDrop Get : (getDiagramResources) addResourceToDiagram Update payload resources from toolbox to resource of AVIresource type armEngine.GetResourcesAndRelatedResources return [resources, relations] Set : (setDiagramResources setDiagramRelations) on setDiagramRelations event -> handleNewDiagramResources Get : (getDiagramResources getAzureSettings getDiagramRelations) all layout (AddDiagramResourceToDisplay) Set : (all (setDiagramNodes)) UI Graph useEffect graph.current.elements().remove() graph.current.add(diagramDisplay[currentLayout].elements) layout.current = graph.current.makeLayout({configgraph}) layout.current.run()","title":"2. DragnDrop resources"},{"location":"workflow/#3-switching-layout","text":"","title":"3. Switching layout"}]}